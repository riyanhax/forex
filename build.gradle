plugins {
    id 'org.springframework.boot' version '2.0.4.RELEASE'
}

apply plugin: 'groovy'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

ext {
    groovyVersion = '2.4.8'
    guavaVersion = '24.0-jre'
    oandaVersion = '3.0.21'
    slf4jVersion = '1.7.25'
    spockVersion = '1.1-groovy-2.4-rc-3'
    springVersion = '4.3.3.RELEASE'
}

bootJar {
    launchScript()
}

jar {
    version ''
    preserveFileTimestamps false
    reproducibleFileOrder true
}

dependencies {
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.springframework.boot:spring-boot-starter"
    compile "com.google.guava:guava:$guavaVersion"
    compile "com.oanda.v20:v20:$oandaVersion"

    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

    testCompile "org.springframework:spring-test"
    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude group: 'org.codehaus.groovy'
    }
}

task stopService(type: Exec) {
    commandLine 'sudo', 'service', 'forex', 'stop'
}

task copyJar(dependsOn: [assemble, stopService]) {
    def archive = tasks.jar.archivePath

    doLast {
        exec {
            assert project.hasProperty('targetDir'), 'Please specify -PtargetDir=<path> for where to release to'
            def targetDir = file(project.property('targetDir'))

            logger.lifecycle "Releasing ${archive} to ${targetDir}"

            commandLine 'sudo', 'cp', archive, targetDir
        }
    }
}

task startService(type: Exec, dependsOn: copyJar) {
    commandLine 'sudo', 'service', 'forex', 'start'
}

task release {
    dependsOn copyJar, startService
}